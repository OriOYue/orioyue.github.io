[{"id":"204fdc58f3392f2efeae8886857c8e77","title":"宝塔搭建fiora聊天室","content":"情境引入\n\n\n\n\n\nfiora介绍\n\nfiora 是一款有趣的聊天应用. 基于 node.js, mongodb, react 和 socket.io 等技术开发 \n项目地址：Fiora功能 1.注册账号并登录, 可以长久保存你的数据 2.加入现有群组或者创建自己的群组, 来和大家交流 3.和任意人私聊, 并添加其为好友 4.多种消息类型, 包括文本 &#x2F; 表情 &#x2F; 图片 &#x2F; 代码 &#x2F; 文件 &#x2F; 命令, 还可以搜索表情包 5.当收到新消息时推送通知, 可以自定义通知铃声, 还可以把消息读出来 6.选择你喜欢的主题, 并且可以设置为任何你喜欢的壁纸以及主题颜色 7.设置管理员来管理用户展示:::\n\n安装环境要运行 fiora, 你需要 Node.js(推荐 v14 LTS 版本), MongoDB 和 redis，由于是使用宝塔安装，你可以在宝塔的软件商店直接安装PM2管理器、MongoDB、Redis，其会自动配置好环境。\n运行1.确保安装了 yarn, 如果没有安装请执行： npm install -g yarn2.克隆项目到本地： git clone https://github.com/yinxin630/fiora.git &amp;   cd fiora3.安装项目依赖： yarn install4.构建客户端代码： yarn build:web5.配置 JwtSecret： echo &quot;JwtSecret=&lt;string&gt;&quot; &gt; .env2 ， 要将 &lt;string&gt; 替换为一个秘密文本，如echo &quot;JwtSecret=123456&quot; &gt; .env26.启动服务端： yarn start7.使用浏览器打开： http://[ip地址]:[端口](比如 http://127.0.0.1:9200)8.为了进程守护，可以使用pm2运行项目：pm2 start yarn --name fiora -- start\n:::warning在访问站点之前，一点要在安全组那里开放9200端口，并在宝塔“安全”那里开放9200端口。\n\n配置与代理配置在 fiora 根目录创建 .env 文件, 在里面填写 key=value 键值对(每行一个), 即可修改相应配置. 比如修改端口号 Port=8888这里提供几个简单的配置，其他详细的配置请参考：fiora配置\nJwtSecret&#x3D;123456 #设置JwtSecret，用于加密传输文本\nAdministrator&#x3D;611122f83253662a93123456 #设置管理员ID\nDisableRegister&#x3D;true #禁止用户注册\n\n\n\n\n\n\n\n\n\n1.管理员id可以在第一次注册用户后，在fiora根目录，使用命令：fiora getUserId [username]获取，如：fiora getUserId MeerOst2.也可以在第一次执行yarn start时，在第一次注册用户后，命令窗口会显示如图所示的信息，其中5ed5106b96864aa333a39e49就是你的用户ID\nnginx反向代理在使用宝塔添加站点后，其nginx配置文件如图：\n\nnginx配置\nserver\n&#123;\n    listen 80;\n\tlisten 443 ssl http2;\n    server_name chat.meerost.com;\n    index index.php index.html index.htm default.php default.htm default.html;\n    root &#x2F;Raumzeit&#x2F;MeerOst&#x2F;WebRoot&#x2F;Chat;\n    \n    #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则\n    #error_page 404&#x2F;404.html;\n    #HTTP_TO_HTTPS_START\n    if ($server_port !~ 443)&#123;\n        rewrite ^(&#x2F;.*)$ https:&#x2F;&#x2F;$host$1 permanent;\n    &#125;\n    #HTTP_TO_HTTPS_END\n    ssl_certificate    &#x2F;www&#x2F;server&#x2F;panel&#x2F;vhost&#x2F;cert&#x2F;chat.meerost.com&#x2F;fullchain.pem;\n    ssl_certificate_key    &#x2F;www&#x2F;server&#x2F;panel&#x2F;vhost&#x2F;cert&#x2F;chat.meerost.com&#x2F;privkey.pem;\n    ssl_protocols TLSv1.1 TLSv1.2;\n    ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;\n    ssl_prefer_server_ciphers on;\n    ssl_session_cache shared:SSL:10m;\n    ssl_session_timeout 10m;\n    add_header Strict-Transport-Security &quot;max-age&#x3D;31536000&quot;;\n    error_page 497  https:&#x2F;&#x2F;$host$request_uri;\n\n    #SSL-END\n    #ERROR-PAGE-START  错误页配置，可以注释、删除或修改\n    #error_page 404 &#x2F;404.html;\n    #error_page 502 &#x2F;502.html;\n    #ERROR-PAGE-END\n    \n    #PHP-INFO-START  PHP引用配置，可以注释或修改\n    #清理缓存规则\n\n    location ~ &#x2F;purge(&#x2F;.*) &#123;\n        proxy_cache_purge cache_one $host$1$is_args$args;\n        #access_log  &#x2F;www&#x2F;wwwlogs&#x2F;git.meerost.com_purge_cache.log;\n    &#125;\n\t#引用反向代理规则，注释后配置的反向代理将无效\n\tinclude &#x2F;www&#x2F;server&#x2F;panel&#x2F;vhost&#x2F;nginx&#x2F;proxy&#x2F;git.meerost.com&#x2F;*.conf;\n\n\tinclude enable-php-00.conf;\n    #PHP-INFO-END\n    \n    #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效\n    include &#x2F;www&#x2F;server&#x2F;panel&#x2F;vhost&#x2F;rewrite&#x2F;git.meerost.com.conf;\n    #REWRITE-END\n    \n    #禁止访问的文件或目录\n    location ~ ^&#x2F;(\\.user.ini|\\.htaccess|\\.git|\\.svn|\\.project|LICENSE|README.md)\n    &#123;\n        return 404;\n    &#125;\n    \n    #一键申请SSL证书验证目录相关设置\n    location ~ \\.well-known&#123;\n        allow all;\n    &#125;\n\n    \n    access_log  &#x2F;www&#x2F;wwwlogs&#x2F;chat.meerost.com.log;\n   error_log  &#x2F;www&#x2F;wwwlogs&#x2F;chat.meerost.com.error.log;\n&#125;\n\n\n然后在配置文件的适当位置添加：\n#SSL-END\n    location &#x2F; &#123;\n      proxy_set_header   X-Real-IP        $remote_addr;\n      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n      proxy_set_header   Host             $http_host;\n      proxy_set_header   Upgrade          $http_upgrade;\n      proxy_set_header   X-NginX-Proxy    true;\n      proxy_set_header   Connection &quot;upgrade&quot;;\n      proxy_http_version 1.1;\n      proxy_pass         http:&#x2F;&#x2F;localhost:9200;#修改为你自己的端口\n   &#125;\n请勿使用宝塔的反向代理，宝塔的反向代理虽然能够运行，但是后续构建APP，会出现无法访问的情况。另外：如果需要构建APP，而且使用的是宝塔自带的nginx站点配置，一定要删除这一段配置：\n#ERROR-PAGE-START  错误页配置，可以注释、删除或修改\n   #error_page 404 &#x2F;404.html;\n   #error_page 502 &#x2F;502.html;\n   #ERROR-PAGE-END\n   \n   #PHP-INFO-START  PHP引用配置，可以注释或修改\n   #清理缓存规则\n\n   location ~ &#x2F;purge(&#x2F;.*) &#123;\n       proxy_cache_purge cache_one $host$1$is_args$args;\n       #access_log  &#x2F;www&#x2F;wwwlogs&#x2F;git.meerost.com_purge_cache.log;\n   &#125;\n#引用反向代理规则，注释后配置的反向代理将无效\ninclude &#x2F;www&#x2F;server&#x2F;panel&#x2F;vhost&#x2F;nginx&#x2F;proxy&#x2F;git.meerost.com&#x2F;*.conf;\n\ninclude enable-php-00.conf;\n   #PHP-INFO-END\n   \n   #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效\n   include &#x2F;www&#x2F;server&#x2F;panel&#x2F;vhost&#x2F;rewrite&#x2F;git.meerost.com.conf;\n   #REWRITE-END\n   \n   #禁止访问的文件或目录\n   location ~ ^&#x2F;(\\.user.ini|\\.htaccess|\\.git|\\.svn|\\.project|LICENSE|README.md)\n   &#123;\n       return 404;\n   &#125;\n   \n   #一键申请SSL证书验证目录相关设置\n   location ~ \\.well-known&#123;\n       allow all;\n   &#125;\n否则APP也会出现无法访问的情况\n魔改1.如果要修改侧边栏，可以在git clone这一步之后（一定要在构建之前修改源码），修改/fiora/packages/web/src/modules/Sidebar/下的文件，修改之后，使用命令：yarn build:web重构一下，再清除nginx缓存即可。2.如果要修改主页模板，可以修改文件/fiora/packages/web/src/template.html3.如果要修改隐私政策模板，请修改/fiora/packages/server/public/PrivacyPolicy.html文件\n构建APP修改配置（源码）\n\n\n\n\n\n\n注意\n在构建APP前，请先构建好服务端，否则APP无法显示。且构建APP对服务器资源消耗大，请使用2H4G及以上的配置，目前已知我1H2G的服务器无法构建。或者你也可以在本地电脑构建。\n\n1.打开/fiora/packages/app/src/socket.ts文件，找到代码：const host = &#39;https://fiora.suisuijiang.com&#39;;将其中的域名修改为你自己的，如：const host = &#39;https://chat.meerost.com&#39;;2.打开/fiora/packages/app/src/utils/constant.ts文件，将export const referer = &#39;https://fiora.suisuijiang.com/&#39;;中的域名修改为你自己的，如：export const referer=&#39;https://chat.meerost.com/&#39;;3.打开/fiora/packages/app/src/utils/uploadFile.ts文件，找到代码（最后几行）。\nif (url.startsWith(&#39;&#x2F;&#39;)) &#123;\n        return &#96;https:&#x2F;&#x2F;fiora.suisuijiang.com$&#123;url&#125;&#96;; &#x2F;*将域名修改为自己的，如：&#96;https:&#x2F;&#x2F;chat.meerost.com$&#123;url&#125;&#96;*&#x2F;\n    &#125;\n4.（可选）如果需要修改APP的名字和版本，请修改/fiora/packages/app/app.json文件中的name和version，请勿自行修改其中的包名（bundleIdentifier和package），否则在安装时，会提示签名不一致。5.（可选）如果需要修改APP的作者介绍模板和隐私政策显示模板，请修改/fiora/packages/app/src/pages/Other/Other.tsx和/fiora/packages/app/src/pages/Other/PrivacyPolicy.tsx两个文件。\n构建APP1.安装 expo： yarn global add expo-cli2.cd到/fiora/packages/app下。3.安装依赖： yarn install4.开始构建：expo build:android -t apk\n\n\n\n\n\n\n\n\n\n开始构建这一步，它会提示你使用秘钥的配置，这里可以使用expo自带的秘钥，然后在命令行登陆expo账号（请自行在官网注册）。这里expo的命令行有个坑，到构建这一步，需要你通过键盘的上下两个键（键盘右下角）来控制选项，然后回车即可。最后在 expo官网 就可以看到已经构建好的APP，直接下载安装即可。\n\n\n\n\n\n\n提示\napp目前已知问题：无法上传图片和文件，也无法点开显示在网页端正常上传的图片，不知道是什么地方还需要修改，等fiora作者优化app的配置后，我再来完善一下。\n\n","slug":"MiOuChat","date":"2021-08-20T07:31:38.000Z","categories_index":"Diy","tags_index":"fiora,Diy","author_index":"三月"},{"id":"63b83d752978f6e1cb65e67241c95de9","title":"给Aurora主题添加图片灯箱","content":"\n\n\n\n\n\n\n\n\nAurora主题外观很好，但是却没有next主题完美，这不，就没有图片灯箱功能，这让本来就近视的我更加看不清图片。\n所以经过一早上的奋斗，终于在网上找到了解决方案。\n\n\n\n\n\n\n提示\n由于主题自定义化模块较少，所以需要更改源码\n由于使用的是fancybox，所以需要引入jquery\n\n\n_config.aurora.yml文件配置打开主题配置文件_config.aurora.yml，在文件最后添加\ninjects:\n  scripts:\n    - &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3.3.1&#x2F;dist&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt; #fancybox依赖文件\n    - &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;fancyapps&#x2F;fancybox@master&#x2F;dist&#x2F;jquery.fancybox.min.js&quot;&gt;&lt;&#x2F;script&gt; #fancybox所需js文件\n  css:\n    - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;fancyapps&#x2F;fancybox@master&#x2F;dist&#x2F;jquery.fancybox.min.css&quot;&gt; #fancybox所需css文件\n\n修改markdown的生成模板\n\n\n\n\n\n\n\n\n由于主题使用hexo自带的hexo-renderer-marked插件来生成文章内容，而且fancybox需要修改img属性，所以需要找到node_modules\\hexo-renderer-marked\\lib\\renderer.js文件\n如图，定位到大概131行，将代码\n\nlet out &#x3D; &#96;&lt;img src&#x3D;&quot;$&#123;encodeURL(href)&#125;&quot;&#96;;\nif (text) out +&#x3D; &#96; alt&#x3D;&quot;$&#123;text&#125;&quot;&#96;;\nif (title) out +&#x3D; &#96; title&#x3D;&quot;$&#123;title&#125;&quot;&#96;;\nif (lazyload) out +&#x3D; &#39; loading&#x3D;&quot;lazy&quot;&#39;;\n\nout +&#x3D; &#39;&gt;&#39;;\nreturn out;\n\n改为\nlet out &#x3D; &#96;&lt;a data-fancybox&#x3D;&quot;gallery&quot; href&#x3D;&quot;$&#123;encodeURL(href)&#125;&quot;&gt;&lt;img src&#x3D;&quot;$&#123;encodeURL(href)&#125;&quot;&#96;;\nif (text) out +&#x3D; &#96; alt&#x3D;&quot;$&#123;text&#125;&quot;&#96;;\nif (title) out +&#x3D; &#96; title&#x3D;&quot;$&#123;title&#125;&quot;&#96;;\nif (lazyload) out +&#x3D; &#39; loading&#x3D;&quot;lazy&quot;&#39;;\n\nout +&#x3D; &#39;&gt;&lt;&#x2F;a&gt;&#39;;\nreturn out;img\n\n即可。\n最后hexo cl &amp; hexo g &amp; hexo s一键三连即可。\n看一下效果：\n\n\n\n\n\n\n\n\n注意\n不知道是什么原因，图片点击放大后，再关掉图片，页面会不自主地返回到顶端，目前，我也没有办法解决，如果小伙伴知道如何解决，希望也给博主指点指点。\n\n\n","slug":"AddLightBox","date":"2021-08-13T09:13:11.000Z","categories_index":"Aurora","tags_index":"Aurora,魔改,图片灯箱","author_index":"三月"},{"id":"ae8d8aadd92f12202a5a9fd9d8ea753d","title":"腾讯云轻量应用服务器流量监控","content":"情景引入\n\n\n\n\n\n\n\n\n众所周知，作为“良心云”的腾讯云很早之前就推出了轻量应用服务器，其中最受青睐的就是香港轻量应用服务器了，作为一枚穷人，博主也是用的1H2G的香港轻量。虽然性价比高，但也有无奈的一面，如：每月流量限制，超出另计费。作为白嫖党，自然不能因为DDOS而让自己走上破产。所以我借助 2lifetop 提供的源代码，实现了实时流量监控以及超出流量限制自动关机。\n设置ID和KEY\n\n\n\n\n\n\n\n\n由于项目需要腾讯云服务器的实时数据和钉钉机器人。\n所以需要设置腾讯云的SecretId和SecretKey，以及钉钉机器人的Token。\n获取腾讯云API密钥前往 访问密钥 - 控制台 ，点击新建 密钥，复制获取的SecretId和SecretKey，等一会儿会用到。\n\n获取钉钉机器人Token打开电脑端的钉钉，新建一个群，打开群设置，点击智能群助手下的添加机器人，\n\n再选择自定义机器人，\n\n再根据图示：\n\n先填写机器人名称，再将安全设置的自定义关键词打勾，填写关键词为“流量告警”。\n最后找到“4”中的Token，其连接形式如https://oapi.dingtalk.com/robot/send?access_token=973e7b241234567890141d60c24e9e71234567890d7a4cef18ed9ec2fedfvfd\n只需记录token后面的值，即973e7b241234567890141d60c24e9e71234567890d7a4cef18ed9ec2fedfvfd\nGithub Fork项目，设置相关数据Fork项目前往 腾讯云轻量应用服务器流量告警 点击右上角的Fork按钮。\n相关配置ID和Key设置打开你的流量监控的项目仓库，并找到仓库设置，选择Secrets，再点击New repository secret按钮新建Secret\n\n然后像这样填写相关数据：\n\n 其中四个相关值的填写格式如下：\n- SecretId\n name: SecretId\n value: AKIDe8NL2TeABCDEABCDE8AxTigNnyt12345 \n- SecretKey\n name: SecretKey\n value: NUKvFI4dy2pMdePu812345wdoasebcde\n- 钉钉机器人token\n name: webhook\n value: &quot;973e7b241234567890141d60c24e9e71234567890d71234518ed9ec2fe123456&quot; #注意添加双引号\n\n修改配置更改运行频率：这可以通过修改.github/workflows/LH.yml中schedule的cron参数来达到目的，\n如我的，每5分钟运行一次就是：\nschedule:\n  - cron: &quot;*&#x2F;5 * * * *&quot;\n\n由于博主能力有限，如果需要修改成其他的频率，请自行百度。\n关机百分比此举的目的是，如果服务器的流量达到你设定的百分比，就自行关机，可以根据实际情况更改。\n如图：你需要修改这个LH.py中的percent值\n\n运行项目根据如图的顺序即可运行配置\n\n你也可以点击运行的项目查看运行结果\n\n\n\n\n\n\n\n\n\n效果展示：\ngithub\n钉钉\n\n\n\n\n\n\n\n注意\n这其中也有TG酱 ，可以通知关机信息，由于其需要科学上网，所以我并没有设置\n你可以去telegram搜索 @realtgchat_bot，获取token\n其在Secrets的数据填写形式如下：\n- TG酱\n name: tgToken\n value: &quot;WnU3abcdREYxNjQ5NzA12345&quot; #注意双引号\n\n\n\n\n\n\n\n\n\n提示\n钉钉机器人\n\n由于钉钉机器人部分的代码是我写的，略显粗糙，存在：超过一台服务器后，钉钉端只能显示一台服务器的情况，后期有时间的话，我会改一改的，还请各位见谅。\n\n\n\n\n\n\n\n\n\n\n\n\n最后，由衷感谢 2lifetop  提供的源码。\n","slug":"LightHouseFlowMonitor","date":"2021-08-12T13:11:45.000Z","categories_index":"服务器","tags_index":"腾讯云,服务器","author_index":"三月"},{"id":"6c7e8ce860d8756553dd1d8f84913e5a","title":"给Aurora主题增加图片CDN","content":"情景引入\n\n\n\n\n\n\n\n\n由于github不支持百度爬虫的爬取，且在国内访问速度较慢，所以我选择将hexo部署到自己的服务器上。为了减轻服务器的压力，我选择为图片资源加上CDN，但是国内CDN需要域名备案，所以我选择将图片放在github上，再采用jsdelivr加速。jsDelivr YYDS\n在Deploy中加入github仓库\n\n\n\n\n\n提示\n由于要上传到github，所以可以使用hexo的deploy插件，在上传网站文件的时候，就直接上传图片，然后将本站链接替换为jsdelivr链接，即可，这样就少去了使用picgo上传图片的步骤。\n\ndeploy填写格式：\ndeploy:\n- type: git  \n  repo:  \n   github: git@github.com:MeerOst&#x2F;meerost.github.io.git,master # 这里填写你的github仓库链接(ssh形式)，和分支\n\n修改markdwon的生成模板\n\n\n\n\n\n\n\n\n由于markdown图片格式为 ![图片描述](图片链接)，而且，我们在写作时，为了方便，都是直接使用拖动图片至编辑器的习惯，所以需要修改markdwon的生成模板中关于图片链接的代码。\n打开文件 node_modules\\hexo-renderer-marked\\lib\\rederer.js，找到131大概行。如图，将代码:\nlet out &#x3D; &#96;&lt;img src&#x3D;&quot;$&#123;encodeURL(href)&#125;&quot;&#96;;\n    if (text) out +&#x3D; &#96; alt&#x3D;&quot;$&#123;text&#125;&quot;&#96;;\n    if (title) out +&#x3D; &#96; title&#x3D;&quot;$&#123;title&#125;&quot;&#96;;\n    if (lazyload) out +&#x3D; &#39; loading&#x3D;&quot;lazy&quot;&#39;;\n\n    out +&#x3D; &#39;&gt;&#39;;\n\n改为：\n&#x2F;&#x2F;判断链接是否为本地链接\n    var translateUrl&#x3D;&#96;$&#123;encodeURL(href)&#125;&#96;;\n    if(translateUrl.indexOf(&quot;http&quot;)&#x3D;&#x3D;-1)\n    &#123;\n      &#x2F;&#x2F;请将https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;MeerOst&#x2F;meerost.github.io@master改为你的github仓库在jsdelivr中的链接\n      translateUrl&#x3D;&#96;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;MeerOst&#x2F;meerost.github.io@master$&#123;encodeURL(href)&#125;&#96;;\n    &#125;\n    let out &#x3D; &#96;&lt;img src&#x3D;&quot;$&#123;translateUrl&#125;&quot;&#96;;\n    if (text) out +&#x3D; &#96; alt&#x3D;&quot;$&#123;text&#125;&quot;&#96;;\n    if (title) out +&#x3D; &#96; title&#x3D;&quot;$&#123;title&#125;&quot;&#96;;\n    if (lazyload) out +&#x3D; &#39; loading&#x3D;&quot;lazy&quot;&#39;;\n\n    out +&#x3D; &#39;&gt;&#39;;\n\n\n\n\n\n\n\n注意\n请将代码中的链接https://cdn.jsdelivr.net/gh/MeerOst/meerost.github.io@master改为你的github仓库在jsdelivr中的链接，如，这里的MeerOst为作者账户名称（非昵称），meerost.github.io为仓库名称，master为分支名称。\n\n\n\n\n\n\n\n\n\n\n由于代码会自行判断链接为本站链接还是外站链接，所以只要你的markdown在填写本地链接时，正确填写，生成站点文件时就会自动替换为jsdelivr链接。\nmarkdown中的图片引用\n\n\n\n\n\n\n\n\n由于markdown的填写格式类似这样：![图片描述](/images/name.png)，这样，主题在生成时，才会在public文件夹下，创建images文件夹，并将图片文件存于文件夹下。所以为了填写方便，你可以结合Hexo桌面客户端（HexoClient）使用下载安装HexoClient（建议选择1.3.5版本，1.3.6已经不支持这个功能了）后，在写文章时将图片拖至要写文字的地方，HexoClient就会自动生成markdown的图片引用。\n结果展示HexoClient\n站点\n\n\n\n\n\n\n\n\n\n最后，由衷地感谢  雾非雾的情思 提供的 HexoClient 。\n","slug":"AddPictureCDN","date":"2021-08-14T13:53:32.000Z","categories_index":"Aurora","tags_index":"Aurora,魔改,jsdelivr,CDN","author_index":"三月"},{"id":"4975abc4b81825c52eb3002d7b12c42f","title":"给Aurora主题添加友情链接页面","content":"用了Aurora主题有一段时间了，今天才发现，主题没有自带友情链接功能。这就有点难办了，由于我并不懂前端知识，所以只能借用CV大法，阅读 Geniucker’s Blog 的教程后成功搞定。\n添加友情链接页面通过hexo new page friend-links命令添加友情链接页面，打开\\source\\friend-links\\index.md文件，在文件底部加入代码。\n&lt;div id&#x3D;&quot;links&quot;&gt;\n &lt;!-- 友情链接css样式 --&gt;\n&lt;style&gt;\n    .friends-group .friend-content &#123;\n  display: flex;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: -8px;\n  border-radius: 8px;\n  justify-content: flex-start;\n  align-items: flex-start;\n  line-height: 1.3;\n&#125;\n.friends-group .friend-content .friend-card &#123;\n  display: flex;\n  border-radius: 4px;\n  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.1);\n  padding: 8px 0;\n  margin: 8px;\n  margin-top: calc(2.25 * 16px + 32px);\n  color: rgba(85,85,85,0.65);\n  background: #f6f6f6;\n  justify-content: flex-start;\n  align-content: flex-start;\n  flex-direction: column;\n  width: calc(100% &#x2F; 4 - 16px);\n&#125;\n@media screen and (max-width: 1024px) &#123;\n  .friends-group .friend-content .friend-card &#123;\n    width: calc(100% &#x2F; 4 - 16px);\n  &#125;\n&#125;\n@media screen and (max-width: 768px) &#123;\n  .friends-group .friend-content .friend-card &#123;\n    width: calc(100% &#x2F; 3 - 16px);\n  &#125;\n&#125;\n@media screen and (max-width: 500px) &#123;\n  .friends-group .friend-content .friend-card &#123;\n    width: calc(100% &#x2F; 2 - 16px);\n  &#125;\n&#125;\n.friends-group .friend-content .friend-card:hover .friend-left .avatar &#123;\n  transform: scale(1.2) rotate(12deg);\n  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.1), 0 4px 8px 0 rgba(0,0,0,0.1), 0 8px 16px 0 rgba(0,0,0,0.1);\n&#125;\n.friends-group .friend-content .friend-card .friend-left &#123;\n  display: flex;\n  align-self: center;\n&#125;\n.friends-group .friend-content .friend-card .friend-left .avatar &#123;\n  width: 64px;\n  height: 64px;\n  transition: all 0.28s ease;\n  -moz-transition: all 0.28s ease;\n  -webkit-transition: all 0.28s ease;\n  -o-transition: all 0.28s ease;\n  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.1);\n  margin: 16px 8px 4px 8px;\n  margin-top: calc(-1.25 * 16px - 32px);\n  border-radius: 100%;\n  border: 2px solid #fff;\n  background: #fff;\n&#125;\n.friends-group .friend-content .friend-card .friend-right &#123;\n  margin: 4px 8px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n&#125;\n.friends-group .friend-content .friend-card .friend-right p &#123;\n  text-align: center;\n&#125;\n.friends-group .friend-content .friend-card .friend-right .friend-tags-wrapper &#123;\n  transition: all 0.28s ease;\n  -moz-transition: all 0.28s ease;\n  -webkit-transition: all 0.28s ease;\n  -o-transition: all 0.28s ease;\n  margin-left: -2px;\n  word-break: break-all;\n&#125;\n.friends-group .friend-content .friend-card .friend-right p &#123;\n  margin: 0;\n&#125;\n.friends-group .friend-content .friend-card .friend-right p.friend-name &#123;\n  font-size: 0.8125rem;\n  padding-top: 4px;\n  font-weight: 700;\n&#125;\n.friends-group .friend-content .friend-card .friend-right p.tags &#123;\n  font-size: 0.75rem;\n  display: inline;\n  background: 0 0;\n  overflow-wrap: break-word;\n  padding-right: 4px;\n&#125;\n&lt;&#x2F;style&gt;\n    &lt;div class&#x3D;&quot;friends-group&quot;&gt;\n        &lt;h3 class&#x3D;&quot;friend-header&quot;&gt;\n            &lt;i class&#x3D;&quot;fas fa-user-tie fa-fw&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;&#x2F;i&gt;\n            友情链接\n        &lt;&#x2F;h3&gt;\n        &lt;div class&#x3D;&quot;friend-content&quot;&gt;\n            &#123;% for link in site.data.links %&#125;\n            &lt;!-- 友情链接卡片 --&gt;\n                &lt;a class&#x3D;&quot;friend-card&quot; style&#x3D;&quot;background:&#123;&#123; link.color &#125;&#125;; color:#fff&quot; target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener noreferrer&quot; href&#x3D;&quot;&#123;&#123; link.site &#125;&#125;&quot;&gt;\n                    &lt;div class&#x3D;&quot;friend-left&quot;&gt;\n                        &lt;img class&#x3D;&quot;avatar&quot; src&#x3D;&quot;&#123;&#123; link.avatar &#125;&#125;&quot; data-original&#x3D;&quot;&#123;&#123; link.avatar &#125;&#125;&quot;&gt;\n                    &lt;&#x2F;div&gt;\n                    &lt;div class&#x3D;&quot;friend-right&quot;&gt;\n                        &lt;p class&#x3D;&quot;friend-name&quot;&gt;&#123;&#123; link.name &#125;&#125;&lt;&#x2F;p&gt;\n                        &lt;div class&#x3D;&quot;friend-tags-wrapper&quot;&gt;\n                            &lt;p class&#x3D;&quot;tags&quot;&gt;&#123;&#123; link.info &#125;&#125;&lt;&#x2F;p&gt;\n                        &lt;&#x2F;div&gt;\n                    &lt;&#x2F;div&gt;\n                &lt;&#x2F;a&gt;\n            &#123;% endfor %&#125;\n        &lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;          \n&lt;&#x2F;div&gt;\n\n可以根据需要自行修改代码。\n增加配置在source文件夹下新建_data文件夹，在_data文件夹下下新建links.yml文件，打开links.yml加入代码\n- name: MeerOst导航 #网站名称\n  avatar: &#x2F;images&#x2F;admin&#x2F;Raumzeit.png #站点图像\n  site: https:&#x2F;&#x2F;www.OriOYue.com #站点链接\n  info: 关于OriOYue的,都在这里 #站点描述\n  color: &quot;#0e83cd&quot; #友情链接卡片颜色\n- name: 云深不知处\n  avatar: &#x2F;images&#x2F;RaumzeitBlog&#x2F;202108111635787.png\n  site: https:&#x2F;&#x2F;blog.meerost.com\n  info: 天行健，君子以自强不息\n  color: &quot;#2fdad1&quot;\n\n以后添加友情链接就可以直接在文件中加入代码了\n- name: #网站名称\n  avatar: #站点图像\n  site: #站点链接\n  info: #站点描述\n  color: #友情链接卡片颜色\n\n\n\n\n\n\n\n\n\n\n由于我不懂前端，所以我不会将这个友情链接的卡片颜色设置为随机的，只能一个一个设置，如有小伙伴会的，可以留个信。\n在菜单中添加友情链接打开_config.aurora.yml文件，定位到menu:在下面（记得缩进）添加代码：\nfriend-links:\n  name: &#39;FriendLinks&#39;\n  i18n:\n    cn: &#39;友链&#39;\n    en: &#39;Friend Links&#39;\n  path: &#39;&#x2F;page&#x2F;friend-links&#39;\n\n在hexo cl &amp; hexo g &amp; hexo d一键三连，即可。\n最终效果如下：\n\n欢迎互链\n\n\n\n\n\n\n\n\n最后，欢迎各位互链。友情链接\n","slug":"AddFriendLinks","date":"2021-08-12T06:50:53.000Z","categories_index":"Aurora","tags_index":"Aurora,魔改,友情链接","author_index":"三月"},{"id":"f77b152672890a26783ed774335d437b","title":"Hexo主题Aurora的魔改（一）","content":"Hexo主题Aurora的魔改（一）刚接触Hexo，就碰到了这么好的主题，如图是Aurora作者的博客展示：\n你可以从去Github了解Hexo和Aurora主题。\n\n\n虽然主题很好看，但是对于刚接触Hexo，折腾起来是有点棘手。\n安装出现问题，主题修改摸不着头脑，Deploy出现问题。\n下面我将从替换源站静态文件和图片文件链接，以及替换cdns.cloudflare.com链接两个方面来介绍我修改的内容，以后可能还有，敬请期待。\n替换源站链接由于github.io在国内的访问速度很慢，而且也不容易被爬虫抓取，所以我果断选择了在自己的服务器上部署hexo发布的静态文件，关于 如何通过宝塔在自己的服务器上部署hexo站点，可以参考 这两位 博主的做法 :\nHexo 部署至云服务器（宝塔面板） - 黑石博客 - Hexo博客 (heson10.com)\n用宝塔面板将hexo部署到阿里云 | JSOPY\n如果Hexo d时碰到 bash: git-receive-pack: command not found fatal: Could not read from remote repository. 这样的问题，可以参考：\nbash: git-receive-pack: command not found fatal: Could not read from remote repository._小志的博客-CSDN博客\n但是问题又来了，由于我是用的腾讯云的1H2G的香港轻量，资源不够，所以想像wordpress那样弄一个CDN，以及自动替换源站链接为CDN链接，但是搜索了一圈，也没能找到好的方法来自动替换链接，以下是我搜索到的方法，都不太有用，如果有网友实验成功，可以告知以下博主，我也想白嫖。\n自动使用jsdelivr CDN 加速hexo的图片等静态资源加载 | 鸿雁自南人自北 (renzibei.com)\n使用 jsDelivr 免费加速 GitHub Pages 博客的静态资源 - SegmentFault 思否\n使用 jsDelivr 为 Hexo 博客提供高效免费的CDN加速 | 素履独行 (yuanpei.me)\n暂时没法，只能一个个去替换使用的链接，\n1.替换head里的link找到路径：Hexo\\node_modules\\hexo-theme-aurora\\layout\\index.js\n修改head头里面的引用链接，如：\n/favicon.ico\n/static/css/chunk-libs.eebac533.css\n/static/css/app.0d31776f.css\n将这些链接修改为你的cdn链接，如jsdelivr\n2.其他链接替换还是上面的index.ejs文件，ctrl+f搜索  i.p=&quot;/&quot;  \n将  i.p=&quot;/&quot;  改为cdn链接 ，如：i.p=&quot;https://cdn.jsdelivr.net/gh/MeerOst/meerost.github.io@master/&quot;\n这样即可，去游览器f12，可以看到源站链接只有html和json文件了\n替换cdns.cloudflare.com链接由于主题引用了cdnjs.cloudflare.com链接，而这个域名在国内访问慢，ping值高，所以速度并不理想，甚至还会出现一直绕圈的情况。所以需要替换链接，\nf12查看，原来是由于引用了clipboard.min.js文件，而这个文件的引用链接并没有出现在主题文件里面，说明是引用的外部文件里面包含了这个clipboard.min.js文件的引用链接，查与clipboard相关的外部文件，发现是prism-copy-to-clipboard.min.js文件，引用了clipboard.min.js文件，现在只需修改prism-copy-to-clipboard.min.js引用链接就可以了。\n这里有许多方法，你可以自己琢磨一下，我的方法是，\n1.下载clipboard.min.js文件下载clipboard.min.js文件，并上传到github上，找到其jsdelivr的cdn链接\n，如：https://cdn.jsdelivr.net/gh/MeerOst/MeerOstPubilcStatic/ajax/libs/clipboard.js/2.0.0/clipboard.min.js\n1.下载prism-copy-to-clipboard.min.js下载prism-copy-to-clipboard.min.js文件，将https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js链接替换为jsdelivr的cdn链接，最后将prism-copy-to-clipboard.min.js文件上传到github，并找到其jsdelivr的cdn链接，如：https://cdn.jsdelivr.net/gh/MeerOst/MeerOstPubilcStatic/npm/prismjs@1.23.0/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js\n3.替换本地文件链接找到本地路径：Hexo\\\\node_modules\\hexo-theme-aurora\\data\\en.yml 打开en.yml文件，或Hexo\\\\node_modules\\hexo-theme-aurora\\data\\en.yml的cn.yml文件（看你_config.aurora.yml里面的cdn配置使用的是cn还是en）将prism-copy-to-clipboard.min.js文件的引用链接替换为上面的jsdelivr的cdn链接。\n\n\n\n\n\n\nValine评论无法显示问题\n​\t- 如果你在cdn配置为en时，valine会出现无法显示的情况（cn我不知道会不会也有这种情况）\n​\t- 最后查明是Valine.min.js文件报错：不存在，你需要找到\n​\t- Hexo\\node_modules\\hexo-theme-aurora\\data\\en.yml \n​\t- 文件，将其中Valine.min.js的引用链接改为\n​\t- https://cdn.jsdelivr.net/\n​\t- npm/valine@1.4.14/dist/\n​\t- Valine.min.js(请自行需要将链接拼接)。\n\n\n\n\n\n\n\n\n\n\n\n由于我是第一次写博客，难免有些错误和啰嗦，望各位xdm多担待，多指点，谢谢！\n","slug":"AuroraMagicChangeFirst","date":"2021-08-11T05:58:48.000Z","categories_index":"Aurora","tags_index":"Aurora,魔改","author_index":"三月"},{"id":"77ed38adad3d5d6f9ed00db82559cf55","title":"文章测试","content":"文章测试这只是一个功能测试！\n","slug":"PostTest","date":"2021-07-31T07:41:49.000Z","categories_index":"Default","tags_index":"Test","author_index":"三月"},{"id":"3a339898f5d7a4c72928992908dd7a1d","title":"文章Demo","content":"文章Demo这又是一个功能测试哦。\n","slug":"PostDemo","date":"2021-07-31T07:41:29.000Z","categories_index":"Default","tags_index":"Test","author_index":"三月"},{"id":"9507b4a93d015d4e4f85859df8076274","title":"欢迎来到Raumzeit时空","content":"欢迎来到Raumzeit时空大家好这里是Raumzeit——MeerOst的修养基地。\n","slug":"HelloWorld","date":"2021-07-31T07:41:07.000Z","categories_index":"Default","tags_index":"Test","author_index":"三月"}]